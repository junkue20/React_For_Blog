{"ast":null,"code":"var _jsxFileName = \"C:\\\\My_React_Study\\\\blog\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\n\n/* 리액트가 그냥 HTML 코딩보다 편리한 이유 */\n// 데이터바인딩이 쉽다. (Angular,Vue도 가능)\n// 데이터바인딩이란? - var 변수명 = \"내용\"; 와 같은 데이터를 HTML에 넣는것.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // document.getElementById().innerHTML = \"\";  와 같이 전통적인 JS 바인딩이 필요없다!\n\n  let posts = \"React 공부중!\";\n  let styleCode = {\n    color: 'blue',\n    fontSize: '30px'\n  };\n  function 함수() {\n    return 1000;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"jungyu's \\uAC1C\\uBC1C \\uBE14\\uB85C\\uADF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: posts,\n      style: {\n        color: 'blue',\n        fontSize: '30px'\n      },\n      children: \"style\\uC740 \\uC911\\uAD04\\uD638 \\uC548\\uC5D0\\uB3C4 \\uC911\\uAD04\\uD638!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: posts,\n      style: styleCode,\n      children: \"\\uBCC0\\uC218\\uB85C\\uB3C4 \\uC9D1\\uC5B4 \\uB123\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: 함수()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","jsxDEV","_jsxDEV","App","posts","styleCode","color","fontSize","함수","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","style","_c","$RefreshReg$"],"sources":["C:/My_React_Study/blog/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\n/* 리액트가 그냥 HTML 코딩보다 편리한 이유 */\n// 데이터바인딩이 쉽다. (Angular,Vue도 가능)\n// 데이터바인딩이란? - var 변수명 = \"내용\"; 와 같은 데이터를 HTML에 넣는것.\n\nfunction App() {\n  // document.getElementById().innerHTML = \"\";  와 같이 전통적인 JS 바인딩이 필요없다!\n\n  let posts = \"React 공부중!\";\n\n  let styleCode = {color : 'blue', fontSize : '30px'};\n\n  function 함수() {\n    return 1000;\n  }\n\n  return (\n\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>jungyu's 개발 블로그</div>\n      </div>\n      {/* 이미지 import해오는 법*/}\n      <img src={ logo } /> \n      {/* src=\"./logo.svg\" 와 같이 쓰기도 가능. */}\n\n      {/*  jsx 문법  */}\n      <h4>{ posts }</h4>\n      <div className={ posts } style={ {color : 'blue', fontSize : '30px'} }>style은 중괄호 안에도 중괄호!</div>\n      <div className={ posts } style={ styleCode }>변수로도 집어 넣을 수 있습니다.</div>\n\n      <h4>{ 함수() }</h4>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;;AAElB;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EACb;;EAEA,IAAIC,KAAK,GAAG,YAAY;EAExB,IAAIC,SAAS,GAAG;IAACC,KAAK,EAAG,MAAM;IAAEC,QAAQ,EAAG;EAAM,CAAC;EAEnD,SAASC,EAAEA,CAAA,EAAG;IACZ,OAAO,IAAI;EACb;EAEA,oBAEEN,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBR,OAAA;MAAKO,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBR,OAAA;QAAAQ,QAAA,EAAK;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eAENZ,OAAA;MAAKa,GAAG,EAAGf;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAIpBZ,OAAA;MAAAQ,QAAA,EAAMN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClBZ,OAAA;MAAKO,SAAS,EAAGL,KAAO;MAACY,KAAK,EAAG;QAACV,KAAK,EAAG,MAAM;QAAEC,QAAQ,EAAG;MAAM,CAAG;MAAAG,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChGZ,OAAA;MAAKO,SAAS,EAAGL,KAAO;MAACY,KAAK,EAAGX,SAAW;MAAAK,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAErEZ,OAAA;MAAAQ,QAAA,EAAMF,EAAE,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAACG,EAAA,GA7BQd,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}